package ${package}.${moduleName}.controller;

import org.springframework.beans.factory.annotation.Autowired;
import cn.central.common.Page.PageRequest;
import cn.central.common.Page.PageResult;
import cn.central.common.model.Result;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;

/**
 * <p>
 * ${comments}
 * </p>
 *
 * @package:  ${package}.${moduleName}.controller
 * @description: ${comments}
 * @author: ${author}
 * @date: Created in ${datetime}
 * @copyright: Copyright (c) ${year}
 * @version: V1.0
 * @modified: ${author}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/api/v1/pri/${pathName}")
@Api(description = "${className}Controller", tags = {"${comments}"})
public class ${className}Controller {

    @Autowired
    ${className}Service ${classname}Service;


    /**
   * 分页查询${comments}
   * @param pageRequest
   * @return
   */
    @PostMapping("findPage")
    @ApiOperation(value = "分页查询${comments}", notes = "分页查询${comments}")
    public JsonData listSysRoleMenu(@RequestBody PageRequest pageRequest) {
        PageResult page = ${classname}Service.findPage(pageRequest);
        return JsonData.buildSuccess(page);
    }


    /**
     * 通过id查询${comments}
     * @param ${pk.lowerAttrName} id
     * @return JsonData
     */
    @GetMapping("/{${pk.lowerAttrName}}")
    @ApiOperation(value = "通过id查询${comments}", notes = "通过id查询${comments}")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "${pk.lowerAttrName}", value = "主键id", required = true)
    })
    public JsonData get${className}(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName}){
      return  JsonData.buildSuccess(${classname}Service.getById(${pk.lowerAttrName}));
    }

    /**
     * 新增${comments}
     * @param ${classname} ${comments}
     * @return JsonData
     */
    @PostMapping
    @ApiOperation(value = "新增${comments}", notes = "新增${comments}")
    public JsonData save${className}(@RequestBody ${className} ${classname}){
      return  JsonData.buildSuccess(${classname}Service.save(${classname}));
    }

    /**
     * 修改${comments}
     * @param ${pk.lowerAttrName} id
     * @param ${classname} ${comments}
     * @return JsonData
     */
    @PutMapping("/{${pk.lowerAttrName}}")
    @ApiOperation(value = "修改${comments}", notes = "修改${comments}")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "${pk.lowerAttrName}", value = "主键id", required = true)
    })
    public JsonData update${className}(@PathVariable ${pk.attrType} ${pk.lowerAttrName}, @RequestBody ${className} ${classname}){
      return  JsonData.buildSuccess(${classname}Service.updateById(${classname}));
    }

    /**
     * 通过id删除${comments}
     * @param ${pk.lowerAttrName} id
     * @return JsonData
     */
    @DeleteMapping("/{${pk.lowerAttrName}}")
    @ApiOperation(value = "删除${comments}", notes = "删除${comments}")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "${pk.lowerAttrName}", value = "主键id", required = true)
    })
    public JsonData delete${className}(@PathVariable ${pk.attrType} ${pk.lowerAttrName}){
      return  JsonData.buildSuccess(${classname}Service.removeById(${pk.lowerAttrName}));
    }

}
