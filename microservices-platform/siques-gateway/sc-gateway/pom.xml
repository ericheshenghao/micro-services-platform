<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cn.siques</groupId>
        <artifactId>siques-gateway</artifactId>
        <version>4.2.0</version>
    </parent>

    <description>spring cloud gateway网关</description>

  <artifactId>sc-gateway</artifactId>
  <version>4.2.0</version>

    <properties>
        <docker.repostory>registry.cn-hangzhou.aliyuncs.com</docker.repostory>
    </properties>


    <dependencies>
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-gateway</artifactId>
      </dependency>

        <dependency>
            <groupId>cn.siques</groupId>
            <artifactId>siques-config</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.siques</groupId>
            <artifactId>siques-ribbon-spring-boot-starter</artifactId>
        </dependency>


        <dependency>
            <groupId>cn.siques</groupId>
            <artifactId>siques-sentinel-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
        </dependency>


      <!--nacos 服务注册与发现-->
      <dependency>
          <groupId>com.alibaba.cloud</groupId>
          <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
      </dependency>

      <!--  配置数据持久化-->
      <dependency>
          <groupId>com.alibaba.csp</groupId>
          <artifactId>sentinel-datasource-nacos</artifactId>
      </dependency>


      <!--远程调用-->
      <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-openfeign</artifactId>
      </dependency>


      <dependency>
          <groupId>com.alibaba.cloud</groupId>
          <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
      </dependency>


      <dependency>
          <groupId>com.alibaba.csp</groupId>
          <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
      </dependency>



        <!--        服务配置-->
        <dependency>
            <groupId>cn.siques</groupId>
            <artifactId>siques-config</artifactId>
        </dependency>


      <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--加入下面两项配置-->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>

                    <imageName>registry.cn-hangzhou.aliyuncs.com/eric-heshenghao/${project.artifactId}:${project.version}</imageName>
                    <!--                    <dockerDirectory>${basedir}/docker</dockerDirectory> &lt;!&ndash; 指定 Dockerfile 路径&ndash;&gt;-->
                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置，也可以写到 Docokerfile 中 -->
                    <baseImage>java</baseImage>
                    <workdir>/ROOT</workdir>
                    <cmd>["java", "-version"]</cmd>
                    <entryPoint>["java", "-jar", "${project.build.finalName}.jar","--spring.profiles.active=prod"]</entryPoint>

                    <resources>
                        <resource>
                            <targetPath>/ROOT</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <serverId>docker-aliyun</serverId>

                    <registryUrl>${docker.repostory}</registryUrl>
                    <pushImage>true</pushImage>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <!--                   <execution>-->
                    <!--                       <id>tag-image</id>-->
                    <!--                       <phase>package</phase>-->
                    <!--                       <goals>-->
                    <!--                           <goal>tag</goal>-->
                    <!--                       </goals>-->
                    <!--                       <configuration>-->
                    <!--                           <image>registry.cn-hangzhou.aliyuncs.com/eric-heshenghao/${project.artifactId}</image>-->
                    <!--                           <newName>registry.cn-hangzhou.aliyuncs.com/eric-heshenghao/${project.artifactId}:${project.version}</newName>-->
                    <!--                       </configuration>-->
                    <!--                   </execution>-->
                    <execution>
                        <id>push-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>

                        <configuration>

                            <imageName>registry.cn-hangzhou.aliyuncs.com/eric-heshenghao/${project.artifactId}:${project.version}</imageName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
