apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "13"
    field.cattle.io/creatorId: user-ljnqs
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.0.6"],"port":30001,"protocol":"TCP","serviceName":"default:sc-gateway-nodeport","allNodes":true},{"nodeName":"c-jr8tl:m-fb0923ee705a","addresses":["192.168.0.6"],"port":8719,"protocol":"TCP","podName":"default:sc-gateway-6c75dc4b49-kchdb","allNodes":false}]'
  creationTimestamp: "2021-05-19T18:20:47Z"
  generation: 19
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-sc-gateway
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:field.cattle.io/creatorId: {}
          f:labels:
            .: {}
            f:cattle.io/creator: {}
            f:workload.user.cattle.io/workloadselector: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:workload.user.cattle.io/workloadselector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations: {}
              f:labels:
                .: {}
                f:workload.user.cattle.io/workloadselector: {}
            f:spec:
              f:containers:
                k:{"name":"sc-gateway"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":30001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:stdin: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:tty: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"aliyun"}:
                  .: {}
                  f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: kubectl-v1.16.4
      operation: Update
      time: "2021-05-20T04:13:50Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-05-20T07:02:56Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/publicEndpoints: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                f:cattle.io/timestamp: {}
                f:field.cattle.io/ports: {}
            f:spec:
              f:containers:
                k:{"name":"sc-gateway"}:
                  f:ports:
                    k:{"containerPort":8719,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:securityContext:
                    f:capabilities: {}
      manager: rancher
      operation: Update
      time: "2021-05-20T07:02:56Z"
  name: sc-gateway
  namespace: default
  resourceVersion: "34052410"
  selfLink: /apis/apps/v1/namespaces/default/deployments/sc-gateway
  uid: dcd2f658-b276-498a-b916-eaecde8c2e76
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-sc-gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2021-05-20T07:02:54Z"
        field.cattle.io/ports: '[[{"containerPort":9001,"dnsName":"sc-gateway-nodeport","hostPort":0,"kind":"NodePort","name":"main","protocol":"TCP","sourcePort":30002},{"containerPort":8719,"dnsName":"sc-gateway-hostport","hostPort":8719,"kind":"HostPort","name":"sentinel","protocol":"TCP","sourcePort":8719}]]'
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-sc-gateway
    spec:
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/eric-heshenghao/sc-gateway:v0.1
          imagePullPolicy: Always
          name: sc-gateway
          ports:
            - containerPort: 9001
              hostPort: 9001
              name: main
              protocol: TCP
            - containerPort: 8719
              hostPort: 8719
              name: sentinel
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      imagePullSecrets:
        - name: aliyun
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30